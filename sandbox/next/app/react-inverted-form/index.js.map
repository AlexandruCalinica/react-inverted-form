{"version":3,"file":"index.js","sources":["../src/core.ts","../src/store.ts","../src/utils.ts","../src/handlers.ts","../src/hooks.ts"],"sourcesContent":["import {\n  Action,\n  Fields,\n  FormMeta,\n  FormState,\n  FormSteps,\n  FieldProps,\n  GenericObject,\n} from \"./types\";\n\nexport function getInitialMetaProps<T extends GenericObject>(options?: {\n  debug?: boolean;\n}): FormMeta<T> {\n  return {\n    isSubmitting: false,\n    hasSubmitted: false,\n    attemptedSubmit: false,\n    hasDefaultValues: false,\n    hasDefaultCurrentStep: false,\n    handlers: {\n      change: () => undefined,\n      blur: () => undefined,\n      submit: async () => undefined,\n      validate: async () => ({}),\n    },\n    snapshot: null,\n    history: [],\n    debug: options?.debug ?? false,\n  };\n}\n\nexport function getInitialStepsProps(): FormSteps {\n  return {\n    total: 1,\n    current: 1,\n    canNext: false,\n    canPrevious: false,\n  };\n}\n\nexport function getInitialState<T extends object>(options?: {\n  debug: boolean;\n}): FormState<T> {\n  return {\n    values: {} as T,\n    fields: {} as Fields<T>,\n    steps: getInitialStepsProps(),\n    form: getInitialMetaProps(options),\n  };\n}\n\nexport function applyDefaultValues<T extends object>(\n  state: FormState<T>,\n  defaultValues?: FormState<T>[\"values\"]\n) {\n  if (defaultValues) {\n    const prevValues = { ...state.values };\n\n    return {\n      ...state,\n      values: Object.assign(prevValues, defaultValues),\n      form: {\n        ...state.form,\n        hasDefaultValues: true,\n      },\n    };\n  }\n\n  return state;\n}\n\nexport function getInitialFieldProps(): FieldProps {\n  return {\n    meta: {\n      pristine: true,\n      hasError: false,\n      isTouched: false,\n    },\n  };\n}\n\nexport function reducer<T extends object>(\n  state: FormState<T>,\n  action: Action\n): FormState<T> {\n  if (state.form.debug) {\n    state.form.history.push(action);\n  }\n\n  switch (action.type) {\n    case \"INIT\": {\n      const next = getInitialState<T>(action?.payload);\n\n      if (action.payload?.debug) {\n        next.form.history.push(action);\n      }\n\n      return next;\n    }\n    case \"REGISTER_FIELD\": {\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          [action.payload]: null,\n        },\n        fields: {\n          ...state.fields,\n          [action.payload]: getInitialFieldProps(),\n        },\n      };\n    }\n    case \"SET_DEFAULT_VALUES\":\n      return applyDefaultValues<T>(state, action.payload);\n    case \"SET_HANDLERS\": {\n      const handlers = Object.assign(\n        { ...state.form.handlers },\n        action.payload\n      );\n      return {\n        ...state,\n        form: {\n          ...state.form,\n          handlers,\n        },\n      };\n    }\n    case \"FIELD_CHANGE\": {\n      const { values } = state;\n      const { name, value } = action.payload;\n\n      const prevValues = { ...values };\n      const nextValues = Object.assign(prevValues, {\n        [name]: value,\n      });\n\n      return {\n        ...state,\n        values: nextValues,\n      };\n    }\n    case \"SET_FIELD_PRISTINE\": {\n      const { name, pristine } = action.payload;\n      const { fields } = state;\n\n      if (fields[name as keyof T].meta.pristine) {\n        const nextFields = { ...fields };\n        nextFields[name as keyof T].meta.pristine = pristine;\n\n        return {\n          ...state,\n          fields: nextFields,\n        };\n      }\n\n      return state;\n    }\n    case \"FIELD_BLUR\": {\n      const { values } = state;\n      const { name, value } = action.payload;\n\n      const prevValues = { ...values };\n      const nextValues = Object.assign(prevValues, {\n        [name]: value,\n      });\n\n      return {\n        ...state,\n        values: nextValues,\n      };\n    }\n    case \"SET_FIELD_TOUCHED\": {\n      const { name, isTouched } = action.payload;\n      const { fields } = state;\n\n      if (!fields[name as keyof T].meta.isTouched) {\n        const nextFields = { ...fields };\n        nextFields[name as keyof T].meta.isTouched = isTouched;\n\n        return {\n          ...state,\n          fields: nextFields,\n        };\n      }\n\n      return state;\n    }\n    case \"SET_VALIDATION_ERRORS\": {\n      const errors = action.payload as Partial<{ [k in keyof T]: string }>;\n      const fields = Object.entries(state.fields).reduce(\n        (acc, [name, props]) => {\n          if (!(name in errors)) {\n            return {\n              ...acc,\n              [name]: {\n                meta: {\n                  ...(props as FieldProps).meta,\n                  hasError: false,\n                },\n              },\n            };\n          }\n\n          return {\n            ...acc,\n            [name]: {\n              ...(props as FieldProps),\n              meta: {\n                ...(props as FieldProps).meta,\n                hasError: true,\n              },\n              error: errors[name as keyof T],\n            },\n          };\n        },\n        state.fields\n      );\n\n      return {\n        ...state,\n        fields,\n      };\n    }\n    case \"IS_SUBMITTING\": {\n      return {\n        ...state,\n        form: {\n          ...state.form,\n          isSubmitting: true,\n        },\n      };\n    }\n    case \"HAS_SUBMITTED\": {\n      return {\n        ...state,\n        form: {\n          ...state.form,\n          isSubmitting: false,\n          hasSubmitted: true,\n        },\n      };\n    }\n    case \"ATTEMPTED_SUBMIT\": {\n      return {\n        ...state,\n        form: {\n          ...state.form,\n          attemptedSubmit: true,\n        },\n      };\n    }\n    case \"SET_TOTAL_STEPS\": {\n      const total = action.payload;\n      const canNext = total > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          total,\n          canNext,\n        },\n      };\n    }\n    case \"SET_DEFAULT_CURRENT_STEP\": {\n      const current = action.payload;\n      const total = state.steps.total;\n      const canNext = current < total;\n      const canPrevious = current > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n        form: {\n          ...state.form,\n          hasDefaultCurrentStep: true,\n        },\n      };\n    }\n    case \"SET_CURRENT_STEP\": {\n      const current = action.payload;\n      const total = state.steps.total;\n      const canNext = current < total;\n      const canPrevious = current > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n      };\n    }\n    case \"STEP_TO_NEXT\": {\n      const total = state.steps.total;\n      const prevCanNext = state.steps.canNext;\n      const prevCurrent = state.steps.current;\n      const current = prevCanNext ? prevCurrent + 1 : prevCurrent;\n      const canNext = current < total;\n      const canPrevious = current > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n      };\n    }\n    case \"STEP_TO_PREVIOUS\": {\n      const total = state.steps.total;\n      const prevCanPrevious = state.steps.canPrevious;\n      const prevCurrent = state.steps.current;\n      const current = prevCanPrevious ? prevCurrent - 1 : prevCurrent;\n      const canNext = current < total;\n      const canPrevious = current > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n      };\n    }\n    case \"STEP_TO_FIRST\": {\n      const total = state.steps.total;\n      const current = 1;\n      const canPrevious = false;\n      const canNext = total > current;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n      };\n    }\n    case \"STEP_TO_LAST\": {\n      const total = state.steps.total;\n      const current = total;\n      const canNext = false;\n      const canPrevious = current > 1;\n      return {\n        ...state,\n        steps: {\n          ...state.steps,\n          current,\n          canNext,\n          canPrevious,\n        },\n      };\n    }\n    case \"SNAPSHOT_STATE\": {\n      return {\n        ...state,\n        form: {\n          ...state.form,\n          snapshot: {\n            values: { ...state.values },\n            fields: { ...state.fields },\n            steps: { ...state.steps },\n            form: {\n              ...state.form,\n            },\n          },\n        },\n      };\n    }\n    case \"RESET\": {\n      if (!state.form.snapshot) return state;\n\n      const { values, fields, form, steps } = state.form.snapshot;\n\n      return {\n        ...state,\n        values: { ...values },\n        fields: { ...fields },\n        steps: { ...steps },\n        form: {\n          ...state.form,\n          ...form,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  map,\n  pluck,\n  Observable,\n  Subscription,\n  BehaviorSubject,\n  distinctUntilChanged,\n  distinctUntilKeyChanged,\n} from \"rxjs\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { reducer, getInitialState } from \"./core\";\nimport { FormState, Action, ActionType } from \"./types\";\n\nexport class Store<T> {\n  private _states: Record<string, BehaviorSubject<T>>;\n  private _reducers: Record<string, (state: T, action: Action) => T>;\n\n  constructor() {\n    this._reducers = {};\n    this._states = {};\n  }\n\n  init(key: string) {\n    if (!!this._reducers[key]) return;\n    Object.assign(this._reducers, { [key]: reducer });\n\n    if (!!this._states[key]) return;\n    Object.assign(this._states, {\n      [key]: new BehaviorSubject(getInitialState()),\n    });\n  }\n\n  setReducer(\n    key: string,\n    stateReducer: (\n      initialReducer: (state: T, action: Action) => T\n    ) => (state: T, action: Action) => T\n  ) {\n    this._checkPrerequisites(key);\n    this._reducers[key] = stateReducer(reducer as any);\n  }\n\n  select<K extends keyof T>(stateKey: string, key: K): Observable<T[K]> {\n    this._checkPrerequisites(stateKey);\n\n    return this._states[stateKey].pipe(\n      distinctUntilKeyChanged(key),\n      pluck(key)\n    );\n  }\n\n  selectValue(stateKey: string, key: string): Observable<any> {\n    this._checkPrerequisites(stateKey);\n\n    return this._states[stateKey].pipe(\n      map((s) => (s as any)?.values?.[key]),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  selectField(stateKey: string, key: string): Observable<any> {\n    this._checkPrerequisites(stateKey);\n\n    return this._states[stateKey].pipe(\n      map((s) => {\n        const value = (s as any)?.values?.[key];\n        const meta = (s as any)?.fields?.[key];\n        return { value, meta };\n      }),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  subscribe(stateKey: string, callback: (state: T) => void): Subscription {\n    this._checkPrerequisites(stateKey);\n\n    return this._states[stateKey]?.subscribe(callback);\n  }\n\n  dispatch = (stateKey: string, action: Action): void => {\n    this._checkPrerequisites(stateKey);\n\n    const oldState = this._states[stateKey]?.getValue();\n    const newState = this._reducers[stateKey]?.(oldState, action);\n    this._states[stateKey]?.next(newState);\n  };\n\n  asyncDispatch = async <R>(\n    stateKey: string,\n    type: ActionType,\n    runner: (state: T) => Promise<R>\n  ): Promise<void> => {\n    this._checkPrerequisites(stateKey);\n\n    const payload = await runner(this._states[stateKey].getValue());\n    this.dispatch(stateKey, { type, payload });\n  };\n\n  private _checkPrerequisites(key: string) {\n    if (!this._states[key])\n      throw new Error(\n        `Store does not contain \"state\" with key \"${key}\".\\n\n        Did you forgot to call Store.init(\"${key}\")?\\n`\n      );\n\n    if (!this._reducers[key])\n      throw new Error(\n        `Store does not contain \"reducer\" with key \"${key}\".\\n\n          Did you forgot to call Store.init(\"${key}\")?\\n`\n      );\n  }\n}\n\nexport default new Store<FormState<any>>();\n","import { GenericObject, FormState } from \"./types\";\n\nexport function getMetaProps<T extends GenericObject>(state: FormState<T>) {\n  const { values, ...rest } = state;\n  return rest;\n}\n\nexport function mergeCurrentWithPrevious<T extends GenericObject>(\n  name: keyof T,\n  value: any,\n  values: { [k in keyof T]: any }\n) {\n  return Object.assign(values, { [name]: value });\n}\n","import { BaseSyntheticEvent, FormEvent } from \"react\";\n\nimport { Store } from \"./store\";\nimport { GenericObject, FormHandlers, FormState, ActionType } from \"./types\";\nimport { mergeCurrentWithPrevious, getMetaProps } from \"./utils\";\n\ninterface ValidateOptions {\n  attemptedSubmit?: boolean;\n}\n\ninterface StoreHandlers {\n  registerField: (name: string) => void;\n  setDefaultValues: <T extends GenericObject>(defaultValues: T) => void;\n  setHandlers: <T extends GenericObject>(\n    handlers: Partial<FormHandlers<T>>\n  ) => void;\n  setValidationErrors: <T extends GenericObject>(\n    errors: Partial<{ [k in keyof T]: string }>\n  ) => void;\n  setTotalSteps: (total: number) => void;\n  setDefaultCurrentStep: (step: number) => void;\n  setCurrentStep: (step: number) => void;\n  stepToNext: () => void;\n  stepToPrevious: () => void;\n  stepToFirst: () => void;\n  stepToLast: () => void;\n  validate: <T extends GenericObject>(options?: ValidateOptions) => void;\n  handleChangeCallback: <T extends GenericObject>(\n    name: keyof T,\n    value: any\n  ) => void;\n  handleFieldChange: <T extends GenericObject>(\n    name: keyof T\n  ) => (e: any) => void;\n  handleFieldBlur: <T extends GenericObject>(name: keyof T) => (e: any) => void;\n  handleSubmit: <T extends GenericObject>(\n    event: FormEvent<HTMLFormElement>\n  ) => void;\n  asyncDispatch: <T extends GenericObject>(\n    type: ActionType,\n    payload: (state: FormState<T>) => Promise<unknown>,\n    options?: { formId?: string }\n  ) => void;\n  snapshotState: () => void;\n  reset: () => void;\n}\n\nexport function getStoreHandlers(\n  key: string,\n  store: Store<FormState<any>>\n): StoreHandlers {\n  function registerField(name: string) {\n    store.dispatch(key, { type: \"REGISTER_FIELD\", payload: name });\n  }\n  function setDefaultValues<T extends GenericObject>(defaultValues: T) {\n    store.dispatch(key, {\n      type: \"SET_DEFAULT_VALUES\",\n      payload: defaultValues,\n    });\n  }\n  function setHandlers<T extends GenericObject>(\n    handlers: Partial<FormHandlers<T>>\n  ) {\n    store.dispatch(key, { type: \"SET_HANDLERS\", payload: handlers });\n  }\n  function setValidationErrors<T extends GenericObject>(\n    errors: Partial<{ [k in keyof T]: string }>\n  ) {\n    store.dispatch(key, { type: \"SET_VALIDATION_ERRORS\", payload: errors });\n  }\n  function setTotalSteps(total: number) {\n    store.dispatch(key, { type: \"SET_TOTAL_STEPS\", payload: total });\n  }\n  function setDefaultCurrentStep(step: number) {\n    store.dispatch(key, { type: \"SET_DEFAULT_CURRENT_STEP\", payload: step });\n  }\n  function setCurrentStep(step: number) {\n    store.dispatch(key, { type: \"SET_CURRENT_STEP\", payload: step });\n  }\n  function stepToNext() {\n    store.dispatch(key, { type: \"STEP_TO_NEXT\" });\n  }\n  function stepToPrevious() {\n    store.dispatch(key, { type: \"STEP_TO_PREVIOUS\" });\n  }\n  function stepToFirst() {\n    store.dispatch(key, { type: \"STEP_TO_FIRST\" });\n  }\n  function stepToLast() {\n    store.dispatch(key, { type: \"STEP_TO_LAST\" });\n  }\n  function snapshotState() {\n    store.dispatch(key, { type: \"SNAPSHOT_STATE\" });\n  }\n  function reset() {\n    store.dispatch(key, { type: \"RESET\" });\n  }\n\n  function validate<T extends GenericObject>(options?: ValidateOptions) {\n    store\n      .subscribe(key, async (state) => {\n        const { values, form } = state;\n        try {\n          if (options?.attemptedSubmit) {\n            if (form.attemptedSubmit) {\n              const validationErrors = await form.handlers.validate?.(\n                values,\n                getMetaProps<T>(state)\n              );\n              validationErrors && setValidationErrors(validationErrors);\n            }\n          } else {\n            const validationErrors = await form.handlers.validate?.(\n              values,\n              getMetaProps<T>(state)\n            );\n            validationErrors && setValidationErrors(validationErrors);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      })\n      .unsubscribe();\n  }\n\n  function handleChangeCallback<T extends GenericObject>(\n    name: keyof T,\n    value: any\n  ) {\n    store\n      .subscribe(key, (state) => {\n        const { values, form } = state;\n        const nextValues = mergeCurrentWithPrevious<T>(name, value, values);\n        form.handlers.change?.(nextValues, getMetaProps<T>(state));\n      })\n      .unsubscribe();\n  }\n  function handleFieldChange<T extends GenericObject>(name: keyof T) {\n    return function (e: any) {\n      let value = e;\n      if ((e as BaseSyntheticEvent)?.nativeEvent) {\n        value = (e as BaseSyntheticEvent)?.target?.value;\n      }\n\n      validate<T>({ attemptedSubmit: true });\n\n      handleChangeCallback<T>(name, value);\n\n      store.dispatch(key, { type: \"FIELD_CHANGE\", payload: { name, value } });\n      store.dispatch(key, {\n        type: \"SET_FIELD_PRISTINE\",\n        payload: { name, pristine: false },\n      });\n    };\n  }\n\n  function handleFieldBlur<T extends GenericObject>(name: keyof T) {\n    return function (e: any) {\n      let value = e;\n      if ((e as BaseSyntheticEvent)?.nativeEvent) {\n        value = (e as BaseSyntheticEvent)?.target?.value;\n      }\n\n      validate<T>({ attemptedSubmit: true });\n\n      store\n        .subscribe(key, (state) => {\n          const values = state.values;\n          const handler = state.form.handlers?.blur;\n\n          const nextValues = mergeCurrentWithPrevious<T>(name, value, values);\n          handler?.(nextValues, getMetaProps<T>(state));\n        })\n        .unsubscribe();\n\n      store.dispatch(key, { type: \"FIELD_BLUR\", payload: { name, value } });\n      store.dispatch(key, {\n        type: \"SET_FIELD_TOUCHED\",\n        payload: { name, isTouched: true },\n      });\n    };\n  }\n\n  function handleSubmit<T extends GenericObject>(\n    e: FormEvent<HTMLFormElement>\n  ) {\n    e?.preventDefault?.();\n    store.dispatch(key, { type: \"ATTEMPTED_SUBMIT\" });\n\n    store\n      .subscribe(key, async (state) => {\n        const values = state.values;\n        const handler = state.form.handlers?.submit;\n        const validate = state.form.handlers?.validate;\n        const metaProps = getMetaProps<T>(state);\n\n        try {\n          const errors = await validate?.(values, metaProps);\n          if (errors && Object.keys(errors).length > 0) {\n            setValidationErrors(errors);\n          } else {\n            store.dispatch(key, { type: \"IS_SUBMITTING\" });\n\n            await handler?.(values, metaProps);\n            store.dispatch(key, { type: \"HAS_SUBMITTED\" });\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      })\n      .unsubscribe();\n  }\n\n  function asyncDispatch(\n    type: ActionType,\n    payload: (store: FormState<any>) => Promise<unknown>,\n    options?: { formId?: string }\n  ) {\n    store.asyncDispatch(options?.formId ?? key, type, payload);\n  }\n\n  return {\n    registerField,\n    setDefaultValues,\n    setHandlers,\n    setValidationErrors,\n    setTotalSteps,\n    setDefaultCurrentStep,\n    setCurrentStep,\n    stepToNext,\n    stepToPrevious,\n    stepToFirst,\n    stepToLast,\n    validate,\n    handleChangeCallback,\n    handleFieldChange,\n    handleFieldBlur,\n    handleSubmit,\n    asyncDispatch,\n    snapshotState,\n    reset,\n  };\n}\n","import { useState, useEffect, ReactNode, useRef } from \"react\";\n\nimport { Store } from \"./store\";\nimport { getInitialState, getInitialFieldProps } from \"./core\";\nimport {\n  Action,\n  FormState,\n  FieldProps,\n  InputProps,\n  GenericObject,\n  FormMetaProps,\n  UseFieldOptions,\n  NativeInputProps,\n} from \"./types\";\nimport { getStoreHandlers } from \"./handlers\";\n\nconst store = new Store<FormState<any>>();\n\nexport function useFormState<T extends GenericObject>(\n  formId: string,\n  options?: { debug?: boolean }\n) {\n  const [state, setState] = useState<FormState<T>>(() => getInitialState());\n\n  useEffect(() => {\n    store.init(formId);\n    store.dispatch(formId, {\n      type: \"INIT\",\n      payload: options,\n    });\n\n    const subscription = store.subscribe(formId, setState);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return state;\n}\n\nexport function useField<T extends GenericObject, Property extends keyof T>(\n  name: keyof T,\n  formId: string,\n  options?: UseFieldOptions\n) {\n  const didMountRef = useRef(false);\n  const [state, setState] = useState<{ value: any; meta: FieldProps }>({\n    value: undefined,\n    meta: getInitialFieldProps(),\n  });\n\n  const { handleFieldBlur, handleFieldChange, registerField } =\n    getStoreHandlers(formId, store);\n\n  if (didMountRef.current === false) {\n    store.init(formId);\n    registerField(name as string);\n    didMountRef.current = true;\n  }\n\n  const getLabelProps = () => ({\n    htmlFor: String(name),\n  });\n\n  const getInputProps = (): InputProps => ({\n    name: name as string,\n    id: name as string,\n    value: state.value,\n    onBlur: handleFieldBlur(name),\n    onChange: handleFieldChange(name),\n  });\n\n  const getNativeInputProps = (): NativeInputProps => ({\n    name: name as string,\n    id: name as string,\n    value: state.value,\n    onBlur: handleFieldBlur(name),\n    onChangeText: handleFieldChange(name),\n  });\n\n  const renderError = (renderer: (error: string) => ReactNode) => {\n    if (!state?.meta?.error) return null;\n    return renderer(state?.meta?.error ?? \"\");\n  };\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    const subscription = store\n      .selectField(formId, name as string)\n      .subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [name]);\n\n  return {\n    state,\n    renderError,\n    getInputProps,\n    getLabelProps,\n    getNativeInputProps,\n  };\n}\n\ninterface UseFormOptions<T extends GenericObject> {\n  formId: string;\n  defaultValues?: T;\n  stateReducer?: (\n    state: FormState<T>,\n    action: Action,\n    next: FormState<T>\n  ) => FormState<T>;\n  totalSteps?: number;\n  defaultCurrentStep?: number;\n  onBlur?: (values: T, metaProps: FormMetaProps<T>) => void;\n  onChange?: (values: T, metaProps: FormMetaProps<T>) => void;\n  onSubmit?: (values: T, metaProps: FormMetaProps<T>) => Promise<void>;\n  validator?: (\n    values: T,\n    metaProps: FormMetaProps<T>\n  ) => Promise<Partial<{ [k in keyof T]: string }>>;\n  debug?: boolean;\n}\n\nexport function useForm<T extends GenericObject>(options: UseFormOptions<T>) {\n  const state = useFormState<T>(options.formId, {\n    debug: options?.debug ?? false,\n  });\n  const {\n    reset,\n    stepToLast,\n    stepToNext,\n    stepToFirst,\n    setHandlers,\n    handleSubmit,\n    registerField,\n    setTotalSteps,\n    snapshotState,\n    asyncDispatch,\n    stepToPrevious,\n    setCurrentStep,\n    setDefaultValues,\n    setValidationErrors,\n    setDefaultCurrentStep,\n  } = getStoreHandlers(options.formId, store);\n\n  useEffect(() => {\n    if (options.defaultValues) {\n      // Object.keys(options.defaultValues).forEach(registerField);\n      setDefaultValues<T>(options?.defaultValues);\n    }\n    if (options.defaultCurrentStep) {\n      setDefaultCurrentStep(options?.defaultCurrentStep);\n    }\n    if (options?.totalSteps) {\n      setTotalSteps(options.totalSteps);\n    }\n    if (options?.stateReducer) {\n      store.setReducer(\n        options.formId,\n        (reducer) => (state, action) =>\n          options.stateReducer?.(\n            state,\n            action,\n            reducer(state, action)\n          ) as FormState<T>\n      );\n    }\n\n    setHandlers<T>({\n      blur: options?.onBlur,\n      change: options?.onChange,\n      submit: options?.onSubmit,\n      validate: options?.validator,\n    });\n\n    snapshotState();\n  }, []);\n\n  useEffect(() => {\n    if (options?.stateReducer) {\n      store.setReducer(\n        options.formId,\n        (reducer) => (state, action) =>\n          options.stateReducer?.(\n            state,\n            action,\n            reducer(state, action)\n          ) as FormState<T>\n      );\n    }\n  }, [options?.stateReducer]);\n\n  return {\n    state,\n    reset,\n    stepToNext,\n    stepToLast,\n    stepToFirst,\n    handleSubmit,\n    asyncDispatch,\n    setCurrentStep,\n    stepToPrevious,\n    setDefaultValues,\n    setValidationErrors,\n  };\n}\n"],"names":["getInitialMetaProps","options","isSubmitting","hasSubmitted","attemptedSubmit","hasDefaultValues","hasDefaultCurrentStep","handlers","change","blur","submit","async","validate","snapshot","history","debug","_a","getInitialState","values","fields","steps","total","current","canNext","canPrevious","form","reducer","state","action","push","type","next","payload","meta","pristine","hasError","isTouched","defaultValues","prevValues","Object","assign","applyDefaultValues","name","value","nextValues","nextFields","errors","entries","reduce","acc","props","error","prevCanNext","prevCurrent","prevCanPrevious","Store","constructor","this","dispatch","stateKey","_checkPrerequisites","oldState","_states","getValue","newState","_c","_b","_reducers","call","_d","asyncDispatch","runner","init","key","BehaviorSubject","setReducer","stateReducer","select","pipe","distinctUntilKeyChanged","pluck","selectValue","map","s","distinctUntilChanged","isEqual","selectField","subscribe","callback","Error","getMetaProps","rest","mergeCurrentWithPrevious","getStoreHandlers","store","setValidationErrors","validationErrors","unsubscribe","handleChangeCallback","registerField","setDefaultValues","setHandlers","setTotalSteps","setDefaultCurrentStep","step","setCurrentStep","stepToNext","stepToPrevious","stepToFirst","stepToLast","handleFieldChange","e","nativeEvent","target","handleFieldBlur","handler","handleSubmit","preventDefault","metaProps","keys","length","formId","snapshotState","reset","useFormState","setState","useState","useEffect","subscription","useField","didMountRef","useRef","undefined","renderError","renderer","getInputProps","id","onBlur","onChange","getLabelProps","htmlFor","String","getNativeInputProps","onChangeText","useForm","defaultCurrentStep","totalSteps","onSubmit","validator"],"mappings":"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"}